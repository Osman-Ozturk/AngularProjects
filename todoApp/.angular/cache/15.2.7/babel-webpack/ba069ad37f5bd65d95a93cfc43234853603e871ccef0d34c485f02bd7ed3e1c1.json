{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction TodoComponent_table_14_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function TodoComponent_table_14_tr_9_Template_input_ngModelChange_8_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r4 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(item_r4.done = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r4.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r4.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r4.done);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", item_r4.done);\n  }\n}\nfunction TodoComponent_table_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 13)(1, \"thead\")(2, \"tr\");\n    i0.ɵɵelement(3, \"th\");\n    i0.ɵɵelementStart(4, \"th\");\n    i0.ɵɵtext(5, \"Description \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Action\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"tbody\");\n    i0.ɵɵtemplate(9, TodoComponent_table_14_tr_9_Template, 9, 4, \"tr\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.getItems());\n  }\n}\nfunction TodoComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \"Es gibt keine Todo\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TodoComponent {\n  constructor() {\n    this.displayAll = true;\n    this.name = \"Osman\";\n    this.items = [{\n      id: 1,\n      description: \"Get out of bed\",\n      done: true\n    }, {\n      id: 2,\n      description: \"Brush teeth\",\n      done: false\n    }, {\n      id: 3,\n      description: \"Eat breakfast\",\n      done: false\n    }, {\n      id: 4,\n      description: \"Go to work\",\n      done: false\n    }];\n  }\n  getName() {\n    return this.name;\n  }\n  addItem(description) {\n    if (description !== \"\") {\n      this.items.push({\n        id: this.items.length + 1,\n        description: description,\n        done: false\n      });\n    } else {\n      alert(\"Please enter a description\");\n    }\n  }\n  getItems() {\n    if (this.displayAll) {\n      return this.items;\n    } else {\n      return this.items.filter(item => !item.done);\n    }\n  }\n}\nTodoComponent.ɵfac = function TodoComponent_Factory(t) {\n  return new (t || TodoComponent)();\n};\nTodoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TodoComponent,\n  selectors: [[\"todo\"]],\n  decls: 16,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-5\", \"mx-auto\"], [1, \"bg-primary\", \"text-white\", \"p-3\", \"mx-auto\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"text\", \"name\", \"todo\", 1, \"form-control\"], [\"todo\", \"\"], [1, \"btn\", \"btn-outline-primary\", 3, \"click\"], [1, \"form-control\", \"mb-3\"], [\"type\", \"checkbox\", \"id\", \"displayAll\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"displayAll\", 1, \"form-check-label\"], [\"class\", \"table table-bordered\", 4, \"ngIf\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [1, \"alert\", \"alert-warning\"]],\n  template: function TodoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵelement(6, \"input\", 5, 6);\n      i0.ɵɵelementStart(8, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function TodoComponent_Template_button_click_8_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(7);\n        ctx.addItem(_r0.value);\n        return i0.ɵɵresetView(_r0.value = \"\");\n      });\n      i0.ɵɵtext(9, \"Add\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function TodoComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.displayAll = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\", 10);\n      i0.ɵɵtext(13, \"Show done\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, TodoComponent_table_14_Template, 10, 1, \"table\", 11);\n      i0.ɵɵtemplate(15, TodoComponent_div_15_Template, 2, 0, \"div\", 12);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", ctx.getName(), \" Todos \");\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.displayAll);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.getItems().length > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.getItems);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAuBoBA,0BAAoC;IAC5BA,YAAW;IAAAA,iBAAK;IACpBA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAa;IAAAA,iBAAK;IACtBA,0BAAI;IACuBA;MAAA;MAAA;MAAA,OAAaA,qCAC3D;IAAA,EADqE;IAA9CA,iBAA+C;;;;IAJ/CA,eAAW;IAAXA,gCAAW;IACXA,eAAoB;IAApBA,yCAAoB;IACpBA,eAAa;IAAbA,kCAAa;IAEUA,eAAuB;IAAvBA,sCAAuB;;;;;IAd9DA,iCAAiE;IAGrDA,qBAAS;IACTA,0BAAI;IAAAA,4BAAY;IAAAA,iBAAK;IACrBA,0BAAI;IAAAA,sBAAM;IAAAA,iBAAK;IAGvBA,6BAAO;IACHA,sEAOK;IACTA,iBAAQ;;;;IARiBA,eAAa;IAAbA,2CAAa;;;;;IAU1CA,+BAAkD;IAAAA,kCAAkB;IAAAA,iBAAM;;;ACxBtF,OAAM,MAAOC,aAAa;EACxBC;IACA,eAAU,GAAW,IAAI;IACjB,SAAI,GAAU,OAAO;IAIrB,UAAK,GAAc,CACzB;MAACC,EAAE,EAAC,CAAC;MAACC,WAAW,EAAE,gBAAgB;MAAEC,IAAI,EAAE;IAAI,CAAC,EAChD;MAACF,EAAE,EAAC,CAAC;MAACC,WAAW,EAAE,aAAa;MAAEC,IAAI,EAAE;IAAK,CAAC,EAC9C;MAACF,EAAE,EAAC,CAAC;MAACC,WAAW,EAAE,eAAe;MAAEC,IAAI,EAAE;IAAK,CAAC,EAChD;MAACF,EAAE,EAAC,CAAC;MAACC,WAAW,EAAE,YAAY;MAAEC,IAAI,EAAE;IAAK,CAAC,CAC9C;EAXa;EAGdC,OAAO;IACL,OAAO,IAAI,CAACC,IAAI;EAClB;EAOAC,OAAO,CAACJ,WAAkB;IACxB,IAAIA,WAAW,KAAK,EAAE,EAAE;MACtB,IAAI,CAACK,KAAK,CAACC,IAAI,CAAC;QAACP,EAAE,EAAC,IAAI,CAACM,KAAK,CAACE,MAAM,GAAC,CAAC;QAACP,WAAW,EAAEA,WAAW;QAAEC,IAAI,EAAE;MAAK,CAAC,CAAC;KAEhF,MAAI;MACHO,KAAK,CAAC,4BAA4B,CAAC;;EAEvC;EACAC,QAAQ;IACN,IAAI,IAAI,CAACC,UAAU,EAAE;MACnB,OAAO,IAAI,CAACL,KAAK;KAChB,MAAI;MACH,OAAO,IAAI,CAACA,KAAK,CAACM,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACX,IAAI,CAAC;;EAEhD;;AA3BSJ,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDT1BrB,8BAAuB;MAIPA,YACJ;MAAAA,iBAAK;MACLA,8BAA8B;MAC1BA,8BAA0D;MAC1DA,iCAAqF;MAA7CA;QAAAA;QAAA;QAASsB,sBAAmB;QAAA,OAAEtB,2BAAW,EAAE;MAAA,EAAC;MAACA,mBAAG;MAAAA,iBAAS;MAErGA,+BAA+B;MACJA;QAAA;MAAA,EAAwB;MAA/CA,iBAAyF;MACzFA,kCAAiD;MAAAA,0BAAS;MAAAA,iBAAQ;MAEtEA,sEAkBQ;MACRA,iEAA0E;MAC9EA,iBAAM;;;MA9BEA,eACJ;MADIA,oDACJ;MAM2BA,eAAwB;MAAxBA,wCAAwB;MAGdA,eAA0B;MAA1BA,gDAA0B;MAmB7BA,eAAc;MAAdA,mCAAc","names":["i0","TodoComponent","constructor","id","description","done","getName","name","addItem","items","push","length","alert","getItems","displayAll","filter","item","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/osman/Desktop/Projects/Angular/todoApp/src/app/todo/todo.component.html","/home/osman/Desktop/Projects/Angular/todoApp/src/app/todo/todo.component.ts"],"sourcesContent":["<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-5 mx-auto\">\n            <h3 class=\"bg-primary text-white p-3 mx-auto\">\n                {{getName()}} Todos \n            </h3>\n            <div class=\"input-group mb-3\">\n                <input type=\"text\" class=\"form-control\" name=\"todo\" #todo>\n                <button class=\"btn btn-outline-primary\" (click)=\"addItem(todo.value); todo.value=''\">Add</button>\n            </div>\n            <div class=\"form-control mb-3\">\n                <input type=\"checkbox\" [(ngModel)]=\"displayAll\" class=\"form-check-input\" id=\"displayAll\">\n                <label for=\"displayAll\" class=\"form-check-label\">Show done</label>\n            </div>\n            <table class=\"table table-bordered\" *ngIf=\"getItems().length >0\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>Description </th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of getItems()\">\n                        <td>{{item.id}}</td>\n                        <td>{{item.description}}</td>\n                        <td>{{item.done}}</td>\n                        <td>\n                            <input type=\"checkbox\" [(ngModel)]=\"item.done\">\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <div class=\"alert alert-warning\" *ngIf=\"getItems\">Es gibt keine Todo</div>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { TodoModel } from './todo.model';\n\n@Component({\n  selector: 'todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\n\nexport class TodoComponent {\n  constructor(){}\n  displayAll:boolean = true;\n  private name:string = \"Osman\"\n  getName():string{\n    return this.name;\n  }\n  private items:TodoModel[] =[\n    {id:1,description: \"Get out of bed\", done: true},\n    {id:2,description: \"Brush teeth\", done: false},\n    {id:3,description: \"Eat breakfast\", done: false},\n    {id:4,description: \"Go to work\", done: false},\n  ]\n  addItem(description:string){\n    if (description !== \"\") {\n      this.items.push({id:this.items.length+1,description: description, done: false})\n      \n    }else{\n      alert(\"Please enter a description\")\n    }\n  }\n  getItems():TodoModel[]{\n    if (this.displayAll) {\n      return this.items\n      }else{\n        return this.items.filter(item => !item.done)\n      }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}