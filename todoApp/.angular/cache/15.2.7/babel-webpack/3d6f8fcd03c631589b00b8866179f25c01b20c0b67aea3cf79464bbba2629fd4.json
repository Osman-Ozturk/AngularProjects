{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction TodoComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \"1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.done);\n  }\n}\nexport class TodoComponent {\n  constructor() {\n    this.name = \"Osman\";\n    this.items = [{\n      id: 1,\n      description: \"Get out of bed\",\n      done: true\n    }, {\n      description: \"Brush teeth\",\n      done: false\n    }, {\n      description: \"Eat breakfast\",\n      done: false\n    }, {\n      description: \"Go to work\",\n      done: false\n    }];\n  }\n  getName() {\n    return this.name;\n  }\n}\nTodoComponent.ɵfac = function TodoComponent_Factory(t) {\n  return new (t || TodoComponent)();\n};\nTodoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TodoComponent,\n  selectors: [[\"todo\"]],\n  decls: 23,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-5\", \"mx-auto\"], [1, \"bg-primary\", \"text-white\", \"p-3\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"text\", 1, \"form-control\"], [1, \"btn\", \"btn-outline-primary\"], [1, \"form-control\", \"mb-3\"], [\"type\", \"checkbox\", \"id\", \"displayAll\", 1, \"form-check-input\"], [\"for\", \"displayAll\", 1, \"form-check-label\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function TodoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n      i0.ɵɵtext(4, \" Todos \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵelement(6, \"input\", 5);\n      i0.ɵɵelementStart(7, \"button\", 6);\n      i0.ɵɵtext(8, \"Add\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7);\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵelementStart(11, \"label\", 9);\n      i0.ɵɵtext(12, \" Show done \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"table\", 10)(14, \"thead\")(15, \"tr\");\n      i0.ɵɵelement(16, \"th\");\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Description \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"tbody\");\n      i0.ɵɵtemplate(22, TodoComponent_tr_22_Template, 7, 2, \"tr\", 11);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IAyBoBA,0BAA+B;IACvBA,iBAAC;IAAAA,iBAAK;IACVA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAa;IAAAA,iBAAK;;;;IADlBA,eAAoB;IAApBA,yCAAoB;IACpBA,eAAa;IAAbA,kCAAa;;;ACpBzC,OAAM,MAAOC,aAAa;EACxBC;IACQ,SAAI,GAAG,OAAO;IAItB,UAAK,GAAE,CACL;MAACC,EAAE,EAAC,CAAC;MAAAC,WAAW,EAAE,gBAAgB;MAAEC,IAAI,EAAE;IAAI,CAAC,EAC/C;MAACD,WAAW,EAAE,aAAa;MAAEC,IAAI,EAAE;IAAK,CAAC,EACzC;MAACD,WAAW,EAAE,eAAe;MAAEC,IAAI,EAAE;IAAK,CAAC,EAC3C;MAACD,WAAW,EAAE,YAAY;MAAEC,IAAI,EAAE;IAAK,CAAC,CACzC;EAVa;EAEdC,OAAO;IACL,OAAO,IAAI,CAACC,IAAI;EAClB;;AALWN,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR1BZ,8BAAuB;MAIPA,uBACJ;MAAAA,iBAAK;MACLA,8BAA8B;MAC1BA,2BAAwC;MACxCA,iCAAwC;MAAAA,mBAAG;MAAAA,iBAAS;MAExDA,8BAA+B;MAC3BA,4BAAgE;MAChEA,iCAAiD;MAC7CA,4BACA;MAAAA,iBAAQ;MAEhBA,kCAAoC;MAGxBA,sBAAS;MACTA,2BAAI;MAAAA,6BAAY;MAAAA,iBAAK;MACrBA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAGvBA,8BAAO;MACHA,+DAIK;MACTA,iBAAQ;;;MALiBA,gBAAQ;MAARA,mCAAQ","names":["i0","TodoComponent","constructor","id","description","done","getName","name","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/osman/Desktop/Projects/Angular/todoApp/src/app/todo/todo.component.html","/home/osman/Desktop/Projects/Angular/todoApp/src/app/todo/todo.component.ts"],"sourcesContent":["<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-5 mx-auto\">\n            <h3 class=\"bg-primary text-white p-3\">\n                Todos\n            </h3>\n            <div class=\"input-group mb-3\">\n                <input type=\"text\" class=\"form-control\">\n                <button class=\"btn btn-outline-primary\">Add</button>\n            </div>\n            <div class=\"form-control mb-3\">\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"displayAll\">\n                <label for=\"displayAll\" class=\"form-check-label\">\n                    Show done\n                    </label>\n            </div>\n            <table class=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>Description </th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of items\">\n                        <td>1</td>\n                        <td>{{item.description}}</td>\n                        <td>{{item.done}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\n\nexport class TodoComponent {\n  constructor(){}\n  private name = \"Osman\"\n  getName(){\n    return this.name;\n  }\n  items =[\n    {id:1description: \"Get out of bed\", done: true},\n    {description: \"Brush teeth\", done: false},\n    {description: \"Eat breakfast\", done: false},\n    {description: \"Go to work\", done: false},\n  ]\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}